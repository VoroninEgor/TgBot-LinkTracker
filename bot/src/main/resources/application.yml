app:
  telegram-token: ${TELEGRAM_TOKEN}
  topic: "updates-topic"
  topic-dlq: "updates-topic-dlq"

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  config:
    import: optional:file:.env[.properties]
  kafka:
    bootstrap-servers: "localhost:29092"
    consumer:
      auto-offset-reset: earliest
      group-id: "demo-group"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: edu.java.bot.dto.LinkUpdateRequest

server:
  port: 8090

management:
  server:
    port: 8091
  endpoints:
    web:
      base-path: /
      path-mapping:
        prometheus: metrics
      exposure:
        include: [ "prometheus", "health", "info" ]
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: "/swagger-ui"

resilience4j:
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 100ms
        enable-exponential-backoff: true
        retry-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException
    instances:
      removeLinkByChatId:
        base-config: default
      getLinksByChatId:
        base-config: default
      postLinkByChatId:
        base-config: default
      removeChatById:
        base-config: default
      createChat:
        base-config: default

bucket4j:
  capacity: 100
